import React from 'react';import { useTable } from "react-table";const Table = (props) => {    const data = React.useMemo(() => props.loads, []);    console.log(data[0])    const columns = React.useMemo(        () => [            {                Header: "Load ID",                accessor: "id",            },            {                Header: "Vehicle",                accessor: "vehicle",            },            {                Header: "Pickup Zip",                accessor: "zipPU",            },            {                Header: "Delivery Zip",                accessor: "zipDO",            },            {                Header: "Rate",                accessor: "rate",            }        ],        []    );    const {        getTableProps, // table props from react-table        getTableBodyProps, // table body props from react-table        headerGroups, // headerGroups, if your table has groupings        rows, // rows for the table based on the data passed        prepareRow // Prepare the row (this function needs to be called for each row before getting the row props)    } = useTable(        {columns,            data}    );    useTable({ columns, data });    return (        <div>            <div className="container">                <table {...getTableProps()}>                    <thead>                    {headerGroups.map((headerGroup) => (                        <tr {...headerGroup.getHeaderGroupProps()}>                            {headerGroup.headers.map((column) => (                                <th {...column.getHeaderProps()}>                                    {column.render("Header")}                                </th>                            ))}                        </tr>                    ))}                    </thead>                    <tbody {...getTableBodyProps()}>                    {rows.map((row) => {                        prepareRow(row);                        return (                            <tr {...row.getRowProps()}>                                {row.cells.map((cell) => (                                    <td {...cell.getCellProps()}> {cell.render("Cell")} </td>                                )                               )                                }                            </tr>                        );                    })}                    </tbody>                </table>            </div>        </div>    );};export default Table;